<?xml version="1.0" encoding="UTF-8"?>
<project name="pcdmv3" default="all">


    <property file="ANTBUILD.properties"/>
    <!-- Uncomment the following property if no tests compilation is needed -->
    <!--
    <property name="skip.tests" value="true"/>
     -->

    <!-- Compiler options -->

    <property name="compiler.debug" value="on"/>
    <property name="compiler.generate.no.warnings" value="off"/>
    <property name="compiler.args" value=""/>
    <property name="compiler.max.memory" value="700m"/>
    <patternset id="ignored.files">
        <exclude name="**/*.hprof/**"/>
        <exclude name="**/*.pyc/**"/>
        <exclude name="**/*.pyo/**"/>
        <exclude name="**/*.rbc/**"/>
        <exclude name="**/*.yarb/**"/>
        <exclude name="**/*~/**"/>
        <exclude name="**/.DS_Store/**"/>
        <exclude name="**/.git/**"/>
        <exclude name="**/.hg/**"/>
        <exclude name="**/.svn/**"/>
        <exclude name="**/CVS/**"/>
        <exclude name="**/__pycache__/**"/>
        <exclude name="**/_svn/**"/>
        <exclude name="**/vssver.scc/**"/>
        <exclude name="**/vssver2.scc/**"/>
    </patternset>
    <patternset id="library.patterns">
        <include name="*.war"/>
        <include name="*.swc"/>
        <include name="*.zip"/>
        <include name="*.egg"/>
        <include name="*.ane"/>
        <include name="*.jar"/>
        <include name="*.ear"/>
    </patternset>
    <patternset id="compiler.resources">
        <exclude name="**/?*.java"/>
        <exclude name="**/?*.form"/>
        <exclude name="**/?*.class"/>
        <exclude name="**/?*.groovy"/>
        <exclude name="**/?*.scala"/>
        <exclude name="**/?*.flex"/>
        <exclude name="**/?*.kt"/>
        <exclude name="**/?*.clj"/>
    </patternset>

    <!-- JDK definitions -->

    <property name="jdk.bin.1.8" value="${jdk.home.1.8}/bin"/>
    <path id="jdk.classpath.1.8">
        <fileset dir="${jdk.home.1.8}">
            <include name="jre/lib/charsets.jar"/>
            <include name="jre/lib/deploy.jar"/>
            <include name="jre/lib/ext/access-bridge-64.jar"/>
            <include name="jre/lib/ext/cldrdata.jar"/>
            <include name="jre/lib/ext/dnsns.jar"/>
            <include name="jre/lib/ext/jaccess.jar"/>
            <include name="jre/lib/ext/jfxrt.jar"/>
            <include name="jre/lib/ext/localedata.jar"/>
            <include name="jre/lib/ext/nashorn.jar"/>
            <include name="jre/lib/ext/sunec.jar"/>
            <include name="jre/lib/ext/sunjce_provider.jar"/>
            <include name="jre/lib/ext/sunmscapi.jar"/>
            <include name="jre/lib/ext/sunpkcs11.jar"/>
            <include name="jre/lib/ext/zipfs.jar"/>
            <include name="jre/lib/javaws.jar"/>
            <include name="jre/lib/jce.jar"/>
            <include name="jre/lib/jfr.jar"/>
            <include name="jre/lib/jfxswt.jar"/>
            <include name="jre/lib/jsse.jar"/>
            <include name="jre/lib/management-agent.jar"/>
            <include name="jre/lib/plugin.jar"/>
            <include name="jre/lib/resources.jar"/>
            <include name="jre/lib/rt.jar"/>
        </fileset>
    </path>

    <property name="project.jdk.home" value="${jdk.home.1.8}"/>
    <property name="project.jdk.bin" value="${jdk.bin.1.8}"/>
    <property name="project.jdk.classpath" value="jdk.classpath.1.8"/>
    <!-- Register Custom Compiler Taskdefs -->
    <property name="javac2.home" value="${idea.home}/lib"/>
    <path id="javac2.classpath">
        <pathelement location="${javac2.home}/javac2.jar"/>
        <pathelement location="${javac2.home}/jdom.jar"/>
        <pathelement location="${javac2.home}/asm-all.jar"/>
        <pathelement location="${javac2.home}/jgoodies-forms.jar"/>
    </path>
    <target name="register.custom.compilers">
        <taskdef name="javac2" classname="com.intellij.ant.Javac2" classpathref="javac2.classpath"/>
        <taskdef name="instrumentIdeaExtensions" classname="com.intellij.ant.InstrumentIdeaExtensions"
                 classpathref="javac2.classpath"/>
    </target>

    <!-- Modules -->


    <!-- Module pcdmv3 -->

    <dirname property="module.pcdmv3.basedir" file="${ant.file}"/>


    <property name="module.jdk.home.pcdmv3" value="${project.jdk.home}"/>
    <property name="module.jdk.bin.pcdmv3" value="${project.jdk.bin}"/>
    <property name="module.jdk.classpath.pcdmv3" value="${project.jdk.classpath}"/>

    <property name="compiler.args.pcdmv3" value="-encoding UTF-8 -source 8 -target 8 ${compiler.args}"/>

    <property name="pcdmv3.output.dir" value="${module.pcdmv3.basedir}/out/production/pcdmv3"/>
    <property name="pcdmv3.testoutput.dir" value="${module.pcdmv3.basedir}/out/test/pcdmv3"/>

    <path id="pcdmv3.module.bootclasspath">
        <!-- Paths to be included in compilation bootclasspath -->
    </path>

    <path id="pcdmv3.module.production.classpath">
        <path refid="${module.jdk.classpath.pcdmv3}"/>
    </path>

    <path id="pcdmv3.runtime.production.module.classpath">
        <pathelement location="${pcdmv3.output.dir}"/>
    </path>

    <path id="pcdmv3.module.classpath">
        <path refid="${module.jdk.classpath.pcdmv3}"/>
        <pathelement location="${pcdmv3.output.dir}"/>
    </path>

    <path id="pcdmv3.runtime.module.classpath">
        <pathelement location="${pcdmv3.testoutput.dir}"/>
        <pathelement location="${pcdmv3.output.dir}"/>
    </path>


    <patternset id="excluded.from.module.pcdmv3">
        <patternset refid="ignored.files"/>
    </patternset>

    <patternset id="excluded.from.compilation.pcdmv3">
        <patternset refid="excluded.from.module.pcdmv3"/>
    </patternset>

    <path id="pcdmv3.module.sourcepath">
        <dirset dir="${module.pcdmv3.basedir}">
            <include name="src"/>
        </dirset>
    </path>


    <target name="compile.module.pcdmv3" depends="compile.module.pcdmv3.production,compile.module.pcdmv3.tests"
            description="Compile module pcdmv3"/>

    <target name="compile.module.pcdmv3.production" depends="register.custom.compilers"
            description="Compile module pcdmv3; production classes">
        <mkdir dir="${pcdmv3.output.dir}"/>
        <javac2 destdir="${pcdmv3.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}"
                memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.pcdmv3}/javac">
            <compilerarg line="${compiler.args.pcdmv3}"/>
            <bootclasspath refid="pcdmv3.module.bootclasspath"/>
            <classpath refid="pcdmv3.module.production.classpath"/>
            <src refid="pcdmv3.module.sourcepath"/>
            <patternset refid="excluded.from.compilation.pcdmv3"/>
        </javac2>

        <copy todir="${pcdmv3.output.dir}">
            <fileset dir="${module.pcdmv3.basedir}/src">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.module.pcdmv3.tests" depends="register.custom.compilers,compile.module.pcdmv3.production"
            description="compile module pcdmv3; test classes" unless="skip.tests"/>

    <target name="clean.module.pcdmv3" description="cleanup module">
        <delete dir="${pcdmv3.output.dir}"/>
        <delete dir="${pcdmv3.testoutput.dir}"/>
    </target>

    <target name="init" description="Build initialization">
        <!-- Perform any build initialization in this target -->
    </target>

    <target name="clean" depends="clean.module.pcdmv3, clean.artifact.pcdmv3" description="cleanup all"/>

    <target name="build.modules" depends="init, clean, compile.module.pcdmv3" description="build all modules"/>

    <target name="init.artifacts">
        <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
        <property name="artifact.output.pcdmv3" value="${basedir}/out/artifacts/pcdmv3"/>
        <mkdir dir="${artifacts.temp.dir}"/>
        <property name="artifact.temp.output.pcdmv3" value="${artifacts.temp.dir}/pcdmv3.jar"/>
        <taskdef resource="com/sun/javafx/tools/ant/antlib.xml" uri="javafx:com.sun.javafx.tools.ant"
                 classpath="${jdk.home.1.8}/lib/ant-javafx.jar"/>
    </target>

    <target name="clean.artifact.pcdmv3" description="clean pcdmv3 artifact output">
        <delete dir="${artifact.output.pcdmv3}"/>
    </target>

    <target xmlns:fx="javafx:com.sun.javafx.tools.ant" name="artifact.pcdmv3"
            depends="init.artifacts, compile.module.pcdmv3" description="Build &#39;pcdmv3&#39; artifact">
        <mkdir dir="${artifact.output.pcdmv3}"/>
        <copy todir="${artifact.temp.output.pcdmv3}">
            <fileset dir="${pcdmv3.output.dir}"/>
        </copy>
        <mkdir dir="${artifact.temp.output.pcdmv3}/META-INF"/>
        <copy file="${basedir}/META-INF/MANIFEST.MF" tofile="${artifact.temp.output.pcdmv3}/META-INF/MANIFEST.MF"/>
        <fx:fileset id="all_but_pcdmv3" dir="${artifact.temp.output.pcdmv3}" includes="**/*.jar">
            <exclude name="pcdmv3.jar"/>
        </fx:fileset>
        <fx:fileset id="all_pcdmv3" dir="${artifact.temp.output.pcdmv3}" includes="**/*.jar"/>
        <fx:application id="pcdmv3_id" name="pcdmv3" mainClass="main.Main" version="3"/>
        <fx:csstobin outdir="${artifact.temp.output.pcdmv3}">
            <fileset dir="${artifact.temp.output.pcdmv3}" includes="**/*.css"/>
        </fx:csstobin>
        <fx:jar destfile="${artifact.temp.output.pcdmv3}/pcdmv3.jar">
            <fx:application refid="pcdmv3_id"/>
            <fileset dir="${artifact.temp.output.pcdmv3}" excludes="**/*.jar"/>
            <fx:resources>
                <fx:fileset refid="all_but_pcdmv3"/>
            </fx:resources>
            <manifest>
                <attribute name="Implementation-Title" value="Powell&#39;s Conjugate Direction Method"/>
                <attribute name="Implementation-Version" value="3"/>
                <attribute name="Implementation-Vendor" value="Bhavesh Prajapat"/>
            </manifest>
        </fx:jar>
        <fx:deploy width="900" height="475" updatemode="background" outdir="${artifact.temp.output.pcdmv3}/deploy"
                   outfile="pcdmv3" nativeBundles="all">
            <fx:permissions elevated="true"/>
            <fx:application refid="pcdmv3_id"/>
            <fx:info title="Powell&#39;s Conjugate Direction Method" vendor="Bhavesh Prajapat"/>
            <fx:resources>
                <fx:fileset refid="all_pcdmv3"/>
            </fx:resources>
        </fx:deploy>
        <property name="artifact.sign.vendor.pcdmv3" value="CN=Bhavesh Prajapat"/>
        <property name="artifact.sign.alias.pcdmv3" value="mykey"/>
        <property name="artifact.sign.keystore.pcdmv3" value="C:\Users\b_h_a\.keystore"/>
        <property name="artifact.sign.storepass.pcdmv3" value="B0und4ry"/>
        <property name="artifact.sign.keypass.pcdmv3" value="B0und4ry"/>
        <signjar alias="${artifact.sign.alias.pcdmv3}" keystore="${artifact.sign.keystore.pcdmv3}"
                 storepass="${artifact.sign.storepass.pcdmv3}" keypass="${artifact.sign.keypass.pcdmv3}">
            <fileset dir="${artifact.temp.output.pcdmv3}/deploy">
                <include name="*.jar"/>
            </fileset>
        </signjar>
        <copy todir="${artifact.output.pcdmv3}">
            <fileset dir="${artifact.temp.output.pcdmv3}/deploy"/>
        </copy>
        <delete includeemptydirs="true">
            <fileset dir="${artifact.temp.output.pcdmv3}"/>
        </delete>
    </target>

    <target name="build.all.artifacts" depends="artifact.pcdmv3" description="Build all artifacts">

        <!-- Delete temporary files -->
        <delete dir="${artifacts.temp.dir}"/>
    </target>

    <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>